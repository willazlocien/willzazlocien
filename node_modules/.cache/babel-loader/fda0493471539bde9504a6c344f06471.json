{"ast":null,"code":"import { useLeafletContext } from '@react-leaflet/core';\nimport { useEffect } from 'react';\nexport function useMap() {\n  return useLeafletContext().map;\n}\nexport function useMapEvent(type, handler) {\n  const map = useMap();\n  useEffect(function addMapEventHandler() {\n    // @ts-ignore event type\n    map.on(type, handler);\n    return function removeMapEventHandler() {\n      // @ts-ignore event type\n      map.off(type, handler);\n    };\n  }, [map, type, handler]);\n  return map;\n}\nexport function useMapEvents(handlers) {\n  const map = useMap();\n  useEffect(function addMapEventHandlers() {\n    map.on(handlers);\n    return function removeMapEventHandlers() {\n      map.off(handlers);\n    };\n  }, [map, handlers]);\n  return map;\n}","map":{"version":3,"sources":["C:/Users/kjuba/OneDrive/Dokumenty/GitHub/willzazlocien/node_modules/react-leaflet/esm/hooks.js"],"names":["useLeafletContext","useEffect","useMap","map","useMapEvent","type","handler","addMapEventHandler","on","removeMapEventHandler","off","useMapEvents","handlers","addMapEventHandlers","removeMapEventHandlers"],"mappings":"AAAA,SAASA,iBAAT,QAAkC,qBAAlC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,SAASC,MAAT,GAAkB;AACvB,SAAOF,iBAAiB,GAAGG,GAA3B;AACD;AACD,OAAO,SAASC,WAAT,CAAqBC,IAArB,EAA2BC,OAA3B,EAAoC;AACzC,QAAMH,GAAG,GAAGD,MAAM,EAAlB;AACAD,EAAAA,SAAS,CAAC,SAASM,kBAAT,GAA8B;AACtC;AACAJ,IAAAA,GAAG,CAACK,EAAJ,CAAOH,IAAP,EAAaC,OAAb;AACA,WAAO,SAASG,qBAAT,GAAiC;AACtC;AACAN,MAAAA,GAAG,CAACO,GAAJ,CAAQL,IAAR,EAAcC,OAAd;AACD,KAHD;AAID,GAPQ,EAON,CAACH,GAAD,EAAME,IAAN,EAAYC,OAAZ,CAPM,CAAT;AAQA,SAAOH,GAAP;AACD;AACD,OAAO,SAASQ,YAAT,CAAsBC,QAAtB,EAAgC;AACrC,QAAMT,GAAG,GAAGD,MAAM,EAAlB;AACAD,EAAAA,SAAS,CAAC,SAASY,mBAAT,GAA+B;AACvCV,IAAAA,GAAG,CAACK,EAAJ,CAAOI,QAAP;AACA,WAAO,SAASE,sBAAT,GAAkC;AACvCX,MAAAA,GAAG,CAACO,GAAJ,CAAQE,QAAR;AACD,KAFD;AAGD,GALQ,EAKN,CAACT,GAAD,EAAMS,QAAN,CALM,CAAT;AAMA,SAAOT,GAAP;AACD","sourcesContent":["import { useLeafletContext } from '@react-leaflet/core';\r\nimport { useEffect } from 'react';\r\nexport function useMap() {\r\n  return useLeafletContext().map;\r\n}\r\nexport function useMapEvent(type, handler) {\r\n  const map = useMap();\r\n  useEffect(function addMapEventHandler() {\r\n    // @ts-ignore event type\r\n    map.on(type, handler);\r\n    return function removeMapEventHandler() {\r\n      // @ts-ignore event type\r\n      map.off(type, handler);\r\n    };\r\n  }, [map, type, handler]);\r\n  return map;\r\n}\r\nexport function useMapEvents(handlers) {\r\n  const map = useMap();\r\n  useEffect(function addMapEventHandlers() {\r\n    map.on(handlers);\r\n    return function removeMapEventHandlers() {\r\n      map.off(handlers);\r\n    };\r\n  }, [map, handlers]);\r\n  return map;\r\n}"]},"metadata":{},"sourceType":"module"}